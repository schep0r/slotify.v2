name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  tests:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      checks: write

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: slotify_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.3'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_pgsql, dom, filter, gd, json, pgsql, xdebug
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Copy .env.test
      run: php -r "file_exists('.env.test') || copy('.env.test', '.env.test');"

    - name: Create test database
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@127.0.0.1:5432/slotify_test?serverVersion=15&charset=utf8" > .env.test.local

    - name: Run database migrations
      run: |
        php bin/console doctrine:database:create --env=test --if-not-exists
        php bin/console doctrine:migrations:migrate --env=test --no-interaction

    - name: Build Codeception
      run: vendor/bin/codecept build

    - name: Run Codeception tests with coverage
      run: |
        XDEBUG_MODE=coverage vendor/bin/codecept run --coverage --xml

    - name: Check coverage thresholds
      run: |
        if [ -f "tests/_output/coverage.xml" ]; then
          echo "Coverage report generated successfully"
          # You can add coverage threshold checking here if needed
        else
          echo "Coverage report not found"
          exit 1
        fi

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./tests/_output/coverage.xml
        flags: codeception
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          tests/_output/
          tests/_output/coverage/

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: tests/_output/report.xml
        check_name: "Codeception Test Results"
        comment_title: "Codeception Test Results"
